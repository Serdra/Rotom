#pragma once
#include "includes.h"

int16_t PST_mg[768] = {0, 0, 0, 0, 0, 0, 0, 0, -48, -18, -9, -38, -44, -5, -18, -52, -36, -14, -9, -33, -11, -24, -9, -43, -43, -12, -13, -2, -5, -14, -17, -42, -30, 0, 8, 21, 18, 11, 14, -33, -25, 10, 11, 52, 25, 43, 19, -21, 95, 111, 31, 19, 19, 37, 126, 37, 0, 0, 0, 0, 0, 0, 0, 0, 72, 83, 80, 74, 102, 69, 74, -9, 113, 97, 111, 81, 83, 124, 86, 107, 103, 107, 117, 97, 118, 102, 119, 93, 100, 142, 124, 124, 129, 124, 113, 97, 132, 143, 135, 170, 152, 152, 134, 155, 124, 185, 178, 221, 205, 205, 185, 170, 127, 165, 193, 196, 165, 206, 132, 144, 98, 186, 141, 184, 205, 93, 124, 124, 7, 79, 109, 114, 106, 127, 118, 59, 150, 132, 146, 126, 137, 131, 149, 139, 128, 116, 140, 132, 117, 134, 98, 143, 117, 144, 144, 149, 154, 127, 133, 117, 152, 145, 152, 155, 149, 164, 141, 166, 121, 187, 196, 185, 198, 194, 186, 119, 113, 192, 194, 203, 195, 184, 158, 171, 141, 131, 167, 160, 152, 104, 155, 131, 121, 129, 130, 127, 170, 131, 112, 117, 124, 115, 112, 144, 147, 134, 128, 114, 140, 166, 159, 169, 179, 154, 154, 134, 130, 132, 163, 164, 189, 167, 149, 125, 156, 177, 168, 195, 199, 188, 147, 146, 187, 194, 240, 239, 253, 200, 220, 163, 253, 236, 254, 374, 381, 311, 236, 215, 268, 312, 327, 411, 433, 381, 291, 267, 272, 305, 273, 285, 301, 267, 367, 337, 277, 315, 318, 315, 314, 326, 302, 293, 317, 331, 342, 337, 339, 334, 338, 313, 323, 350, 344, 347, 358, 348, 330, 321, 335, 347, 383, 378, 373, 373, 351, 334, 347, 382, 415, 423, 409, 384, 380, 361, 385, 396, 398, 427, 442, 398, 401, 392, 353, 396, 426, 467, 479, 426, 365, 351, -17, 64, 17, -2, 26, 8, 55, 115, -49, 91, 42, -31, -49, 12, 43, 96, -56, -25, -31, -86, -103, -89, -31, 13, -59, -100, -75, -32, -80, -135, -151, -63, -71, -86, 40, 12, -6, 7, -194, -216, -85, -31, 16, 110, 15, -1, -176, -119, -274, -124, 70, -63, -20, -64, -27, -82, -92, -250, -75, 3, -46, -159, -213, -196};
int16_t PST_eg[768] = {0, 0, 0, 0, 0, 0, 0, 0, 124, 107, 95, 83, 78, 89, 101, 121, 114, 98, 73, 93, 74, 96, 93, 119, 125, 104, 90, 76, 81, 80, 96, 122, 138, 135, 114, 99, 92, 106, 121, 140, 184, 194, 161, 132, 160, 139, 181, 187, 269, 363, 273, 260, 255, 264, 257, 321, 0, 0, 0, 0, 0, 0, 0, 0, 251, 190, 202, 240, 228, 198, 200, 306, 169, 226, 217, 251, 245, 233, 194, 197, 200, 249, 237, 252, 233, 241, 218, 225, 228, 214, 259, 263, 273, 249, 242, 214, 223, 250, 269, 260, 261, 251, 224, 207, 206, 227, 258, 247, 255, 240, 243, 208, 192, 207, 239, 236, 257, 225, 205, 184, 167, 139, 197, 231, 199, 225, 201, 179, 299, 295, 201, 248, 239, 234, 227, 293, 259, 244, 244, 250, 259, 253, 261, 213, 238, 277, 252, 265, 258, 273, 253, 259, 230, 250, 263, 253, 277, 259, 249, 233, 233, 269, 250, 301, 271, 270, 255, 241, 250, 216, 262, 260, 254, 259, 245, 261, 232, 259, 227, 237, 224, 260, 238, 228, 257, 243, 257, 245, 261, 265, 248, 236, 414, 441, 460, 442, 422, 448, 410, 395, 412, 445, 444, 427, 415, 430, 416, 393, 411, 425, 440, 431, 426, 431, 421, 424, 448, 443, 446, 439, 438, 443, 444, 428, 445, 443, 455, 462, 451, 454, 453, 449, 441, 451, 457, 459, 456, 465, 442, 442, 428, 447, 456, 440, 442, 449, 462, 431, 415, 415, 417, 406, 402, 411, 429, 432, 725, 718, 734, 802, 699, 676, 665, 588, 729, 742, 789, 679, 781, 733, 716, 691, 809, 801, 776, 761, 724, 776, 741, 770, 788, 745, 786, 823, 784, 801, 807, 809, 768, 827, 766, 768, 774, 808, 748, 798, 765, 672, 775, 732, 761, 782, 771, 724, 703, 747, 737, 735, 682, 745, 735, 692, 767, 705, 729, 699, 697, 758, 801, 770, -63, -111, -68, -42, -38, -39, -67, -154, -63, -63, -25, 9, 8, 9, -17, -58, -47, -5, 8, 30, 32, 29, 3, -44, -40, 19, 22, 19, 31, 38, 25, -14, -31, 13, 13, 28, 19, 37, 45, 0, -27, 13, 31, 11, 15, 34, 45, -42, -28, 26, -6, 23, 17, 25, 16, -124, -100, 27, 10, -12, -40, -22, -21, -130};

// int pieceSwap[12] = {6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5};
int phaseScore[6] = {0, 1, 1, 2, 4, 0};

// Builds the piece square tables
void buildPST();

// Evaluates a position, currently only using Piece Square Tables
int eval(chess::Board &position);